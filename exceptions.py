
#Исключения (краткое знакомство)¶
#Исключение - это ситуация, которая, по мнению программиста, требует изменения нормального хода программы.
#Исключение, обычно свидетельствует о возникновении ошибки. Но исключения могут быть применены и для обработки событий не связанных с ошибками.
#Для обработки используется блок
#try:
#    инструкции
#except <Имя исключения>:
#    инструкции

print('sdfgsdfgfsd', end='\n\n')

x = None
while x is None:
    try:
        x = float(input("Введите делимое: "))
    except Exception:
        pass

y = None
while y is None:
    try:
        y = float(input("Введите делитель: "))
    except Exception:
        pass

try:
    print("Результат деления", x, 'на', y, 'равен', x / y)
except ZeroDivisionError:
    print('Будьте внимательнее! Делитель не может быть равен нулю.')
    
Введите делимое: sldkjdlgkjsdf
Введите делимое: 1.212 e- 1111
Введите делимое: 1.212e-111
Введите делитель: 1000000
Результат деления 1.212e-111 на 1000000.0 равен 1.2119999999999999e-117

def input_float(msg):
    result = None
    while result is None:
        try:
#             result = float(input('Введите ' + msg + ' :'))
            return float(input('Введите ' + msg + ' :'))
        except ValueError:
            pass
#     return result

x = input_float('делимое')
y = input_float('делитель')
try:
    print("Результат деления", x, 'на', y, 'равен', x / y)
except ZeroDivisionError:
    print('Будьте внимательнее! Делитель не может быть равен нулю.')

Введите делимое :sdgdfsg
Введите делимое :sdfgdfg
Введите делимое :12
Введите делитель :12
Результат деления 12.0 на 12.0 равен 1.0

Подробнее мы изучим исключения в Python в специальном модуле ближе к концу курса.